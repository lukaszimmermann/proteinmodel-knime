package org.proteinevolution.models.knime.alignment;

import org.knime.core.data.DataType;
import org.knime.core.node.InvalidSettingsException;
import org.knime.core.node.ModelContentRO;
import org.knime.core.node.ModelContentWO;
import org.knime.core.node.port.AbstractSimplePortObjectSpec;
import org.knime.core.node.port.image.ImagePortObject;
import org.proteinevolution.models.spec.AlignmentFormat;


/**
 * 
 * @author lzimmermann
 *
 */
public final class SequenceAlignmentPortObjectSpec extends AbstractSimplePortObjectSpec {

	
	/**
     * @noreference This class is not intended to be referenced by clients.
     */
    public static final class Serializer extends AbstractSimplePortObjectSpecSerializer<SequenceAlignmentPortObjectSpec> {}
	
	private DataType m_type;
    
	// Specification of the alignmentFormat
	private AlignmentFormat alignmentFormat;
	
	
	public SequenceAlignmentPortObjectSpec(final DataType type, final AlignmentFormat alignmentFormat) {
		
		if (type == null) {
			
			throw new NullPointerException("Argument must not be null.");
		}
		this.m_type = type;
		this.alignmentFormat = alignmentFormat;
	}
	
	  /** <b>Framework constructor - do not use.</b> The constructor is required
     * by the super class implementation to restore the content. Client code
     * must not call this constructor. */
    public SequenceAlignmentPortObjectSpec() {
        // no op
    }

    public AlignmentFormat getAlignmentFormat() {
    	
    	return this.alignmentFormat;
    }
    
	/** Get the {@link DataType} of the cell that will be generated by the
     * port objects {@link ImagePortObject#toDataCell()} method.
     * @return The type of the cell, never null. */
    public DataType getDataType() {
        return this.m_type;
    }

    /** {@inheritDoc} */
	@Override
	protected void load(final ModelContentRO model) throws InvalidSettingsException {
		
		this.m_type = DataType.load(model);
	}
	
	 /** {@inheritDoc} */
    @Override
    protected void save(final ModelContentWO model) {
        this.m_type.save(model);
    }
}
 